<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>My Personal and Research Blog</title>
 <link href="http://kyleniemeyer.com/blog/atom.xml" rel="self"/>
 <link href="http://kyleniemeyer.com/blog/"/>
 <updated>2024-01-23T14:57:20+00:00</updated>
 <id>http://kyleniemeyer.com/blog/</id>
 <author>
   <name>Kyle Niemeyer</name>
   <email>kyle.niemeyer@gmail.com</email>
 </author>
 
 
 <entry>
   <title>Importance of CUDA volatile keyword with shared memory</title>
   <link href="http://kyleniemeyer.com/blog/2013/03/21/cuda-volatile-keyword.html"/>
   <updated>2013-03-21T00:00:00+00:00</updated>
   <id>id:/blog/2013/03/21/cuda-volatile-keyword</id>
   <content type="html">&lt;p&gt;When coordinating information between threads in a warp via shared memory in CUDA, you might need to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;volatile&lt;/code&gt; keyword when declaring the shared memory array, as in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;volatile __shared__ int array[SIZE]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In particular, when one thread in the warp (I like to call it the “warp leader”) writes to a location in the shared memory that the rest of the warp threads (“warp workers”) need to read, I found that the volatile keyword is required so that all the workers see the written value.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;__shared__ array[NUM_WARPS];
if (threadIdx.x == 0) {
	array[warpId] = 5;
}

if (array[warpId] == 5) { 
	do something
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this example, I found that without declaring the shared memory array to be volatile, only the warp leader moves into the second conditional statement. Apparently, the CUDA compiler likes use registers in place of actually writing to shared memory. It can also be helpful in reducing register usage, see &lt;a href=&quot;https://devtalk.nvidia.com/default/topic/405513/cuda-programming-and-performance/getting-nvcc-to-consolidate-registers/&quot;&gt;this NVIDIA Developer forum thread&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I should note that this could be avoided by syncing all the threads in the block with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__syncthreads()&lt;/code&gt;, but in my case I want only the warp workers to be synced—I don’t need the entire block.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hello world!</title>
   <link href="http://kyleniemeyer.com/blog/2010/11/06/hello-world.html"/>
   <updated>2010-11-06T00:00:00+00:00</updated>
   <id>id:/blog/2010/11/06/hello-world</id>
   <content type="html">&lt;p&gt;Hello everyone—just getting the website set up, so it might take a while for more to appear here.&lt;/p&gt;

&lt;p&gt;Check back later for information about my research, papers, etc.&lt;/p&gt;
</content>
 </entry>
 
 
</feed>